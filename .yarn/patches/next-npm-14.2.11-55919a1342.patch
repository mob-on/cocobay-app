diff --git a/dist/build/swc/options.js b/dist/build/swc/options.js
index 11261f8669d61451a5eb98853271f59fa1cf057f..f7695086004dec08ecbe1c27a758dd95bfca74f6 100644
--- a/dist/build/swc/options.js
+++ b/dist/build/swc/options.js
@@ -48,7 +48,7 @@ function getParserOptions({ filename, jsConfig, ...rest }) {
         ...rest,
         syntax: hasTsSyntax ? "typescript" : "ecmascript",
         dynamicImport: true,
-        decorators: enableDecorators,
+        decorators: true,
         // Exclude regular TypeScript files from React transformation to prevent e.g. generic parameters and angle-bracket type assertion from being interpreted as JSX tags.
         [hasTsSyntax ? "tsx" : "jsx"]: !isTSFile,
         importAssertions: true
@@ -92,6 +92,7 @@ function getBaseSWCOptions({ filename, jest, development, hasReactRefresh, globa
                 } : {},
                 legacyDecorator: enableDecorators,
                 decoratorMetadata: emitDecoratorMetadata,
+                decoratorVersion: "2022-03",
                 useDefineForClassFields: useDefineForClassFields,
                 react: {
                     importSource: (jsConfig == null ? void 0 : (_jsConfig_compilerOptions4 = jsConfig.compilerOptions) == null ? void 0 : _jsConfig_compilerOptions4.jsxImportSource) ?? ((compilerOptions == null ? void 0 : compilerOptions.emotion) && !isReactServerLayer ? "@emotion/react" : "react"),
diff --git a/dist/esm/build/swc/options.js b/dist/esm/build/swc/options.js
index 3fbde0a5b8754a4d3f75541d7bc8131b1b51f351..48a19115d3b17f14e8419f29cb22bfa91bf94587 100644
--- a/dist/esm/build/swc/options.js
+++ b/dist/esm/build/swc/options.js
@@ -22,7 +22,7 @@ export function getParserOptions({ filename, jsConfig, ...rest }) {
         ...rest,
         syntax: hasTsSyntax ? "typescript" : "ecmascript",
         dynamicImport: true,
-        decorators: enableDecorators,
+        decorators: true,
         // Exclude regular TypeScript files from React transformation to prevent e.g. generic parameters and angle-bracket type assertion from being interpreted as JSX tags.
         [hasTsSyntax ? "tsx" : "jsx"]: !isTSFile,
         importAssertions: true
@@ -66,6 +66,7 @@ function getBaseSWCOptions({ filename, jest, development, hasReactRefresh, globa
                 } : {},
                 legacyDecorator: enableDecorators,
                 decoratorMetadata: emitDecoratorMetadata,
+                decoratorVersion: "2022-03",
                 useDefineForClassFields: useDefineForClassFields,
                 react: {
                     importSource: (jsConfig == null ? void 0 : (_jsConfig_compilerOptions4 = jsConfig.compilerOptions) == null ? void 0 : _jsConfig_compilerOptions4.jsxImportSource) ?? ((compilerOptions == null ? void 0 : compilerOptions.emotion) && !isReactServerLayer ? "@emotion/react" : "react"),
