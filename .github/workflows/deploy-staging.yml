name: Stage deployment

on:
  push:
    branches: ["main"] #TODO: use a develop branch
    paths:
      - Dockerfile
      - .dockerignore
      - package.json
      - tsconfig.json
      - yarn.lock
      - "frontend/**"
      - "infrastructure/**"
  pull_request:
    branches: ["main"]
    paths:
      - Dockerfile
      - .dockerignore
      - package.json
      - tsconfig.json
      - yarn.lock
      - "frontend/**"
      - "infrastructure/**"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}

jobs:
  build-frontend:
    name: Front End
    uses: ./.github/workflows/build-frontend.yml
    secrets: inherit

  build-backend:
    name: Back End
    uses: ./.github/workflows/build-backend.yml
    secrets: inherit

  stage-release:
    name: Deploy to staging
    runs-on: ubuntu-latest
    needs:
      - build-frontend
      - build-backend
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Get version number
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: cocobay-app-frontend
          tags: |
            type=sha,prefix=,format=long

      - name: Login to docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Tag Front End build for staging release
        run: |
          docker pull ${{ vars.DOCKER_REGISTRY }}/cocobay-app-frontend/${{ steps.meta.outputs.version }}
          docker tag ${{ vars.DOCKER_REGISTRY }}/cocobay-app-frontend/${{ steps.meta.outputs.version }} \
            ${{ vars.DOCKER_REGISTRY }}/cocobay-app-frontend:staging
          docker push ${{ vars.DOCKER_REGISTRY }}/cocobay-app-frontend:staging

      - name: Tag Back End build for staging release
        run: |
          docker pull ${{ vars.DOCKER_REGISTRY }}/cocobay-app-backend/${{ steps.meta.outputs.version }}
          docker tag ${{ vars.DOCKER_REGISTRY }}/cocobay-app-backend/${{ steps.meta.outputs.version }} \
            ${{ vars.DOCKER_REGISTRY }}/cocobay-app-backend:staging
          docker push ${{ vars.DOCKER_REGISTRY }}/cocobay-app-backend:staging

      - name: Trigger Jenkins release job
        run: |
          CRUMB=$(curl --fail -c cookies.txt -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_PASSWORD }}" \
            "${{ secrets.JENKINS_URL }}/crumbIssuer/api/json" | jq --raw-output '.crumb')
          curl -X POST -b cookies.txt -H "Jenkins-Crumb: $CRUMB" --fail -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_PASSWORD }}" \
            "${{ secrets.JENKINS_URL }}/job/Cocobay%20App%20Deploy%20Staging/build?delay=0sec" \
            --data-urlencode "name=branch" \
            --data-urlencode "value=${{ github.ref }}" \
            --data-urlencode "statusCode=303" \
            --data-urlencode "redirectTo=.:" \
            --data-urlencode "Jenkins-Crumb=$CRUMB" \
            --data-urlencode "json={\"parameter\":{\"name\":\"branch\",\"value\":\"${{ github.ref }}\"},\"statusCode\":\"303\",\"redirectTo\":\".\",\"\":\"\",\"Jenkins-Crumb\":\"$CRUMB\"}"
