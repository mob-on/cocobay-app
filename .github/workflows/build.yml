name: Test & Build

on:
  workflow_call:
    inputs:
      env:
        type: string
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-build-exists:
    name: Skip build if exists
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    outputs:
      exists: ${{ steps.check-build-exists.outputs.exists }}

    steps:
      - name: Set version number
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: cocobay-app
          tags: |
            type=sha,prefix=,format=long

      - name: Check if already built
        id: "check-build-exists"
        run: |
          echo "Checking if version ${{ steps.meta.outputs.version }} exists"
          (curl -u "${{ secrets.DOCKER_REGISTRY_USERNAME }}:${{ secrets.DOCKER_REGISTRY_PASSWORD }}" \
            "https://${{ vars.DOCKER_REGISTRY }}/v2/cocobay-app-backend/tags/list" | \
            grep -q "\"${{ steps.meta.outputs.version }}\"" && \
            echo "Build ${{ steps.meta.outputs.version }} already exists in registry, no need to rebuild" && \
            echo "::set-output name=exists::true"
          ) || \
          echo "Build ${{ steps.meta.outputs.version }} does not exist yet"

  setup:
    name: Install and cache
    if: ${{ needs.check-build-exists.outputs.exists != 'true' }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    needs: check-build-exists
    outputs:
      version: ${{ steps.meta.outputs.version }}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Set version number
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: cocobay-app
          tags: |
            type=sha,prefix=,format=long

      - name: Yarn Install
        uses: ./.github/workflows/actions/yarn-cache

  lint-check:
    name: Lint check
    if: ${{ needs.check-build-exists.outputs.exists != 'true' }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    needs:
      - check-build-exists
      - setup

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Yarn Install
        uses: ./.github/workflows/actions/yarn-cache

      - name: Lint checks
        run: |
          yarn lint:check

      - name: Cancel workflow if failed
        if: failure()
        uses: andymckay/cancel-action@0.4

  test-unit:
    name: Unit tests
    if: ${{ needs.check-build-exists.outputs.exists != 'true' }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    needs:
      - check-build-exists
      - setup

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Yarn Install
        uses: ./.github/workflows/actions/yarn-cache

      - name: Run all unit tests
        run: |
          yarn test:cov

      - name: Cancel workflow if failed
        if: failure()
        uses: andymckay/cancel-action@0.4

  test-e2e:
    name: End to end tests
    if: ${{ needs.check-build-exists.outputs.exists != 'true' }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    needs:
      - check-build-exists
      - setup

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Yarn Install
        uses: ./.github/workflows/actions/yarn-cache

      - name: Run all e2e tests
        run: |
          yarn test:e2e-cov

      - name: Cancel workflow if failed
        if: failure()
        uses: andymckay/cancel-action@0.4

  backend-build:
    name: Backend
    if: ${{ needs.check-build-exists.outputs.exists != 'true' }}
    needs:
      - check-build-exists
      - setup
    uses: ./.github/workflows/docker-build.yml
    secrets: inherit
    with:
      env: ${{ inputs.env }}
      docker-build-args: ". --file Dockerfile.backend --target backend"
      docker-run-args: "--env PORT=80 -p 80"
      docker-smoke-curl-url: "http://localhost"
      app-name: cocobay-app-backend
      version: ${{ needs.setup.outputs.version }}

  frontend-build:
    name: Frontend
    if: ${{ needs.check-build-exists.outputs.exists != 'true' }}
    needs:
      - check-build-exists
      - setup
    uses: ./.github/workflows/docker-build.yml
    secrets: inherit
    with:
      env: ${{ inputs.env }}
      docker-build-args: ". --file Dockerfile.frontend --target frontend --build-arg ENV=${{ vars.ENV }}"
      docker-run-args: "-p 80"
      docker-smoke-curl-url: "http://localhost"
      app-name: cocobay-app-frontend
      version: ${{ needs.setup.outputs.version }}
